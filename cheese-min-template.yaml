apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: cheese-min-template
  annotations:
    iconClass: icon-jenkins
    template.alpha.openshift.io/wait-for-ready: "true"
labels:
  template: cheese-min-template
  app: cheese-min
parameters:
  - name: APPLICATION_NAME
    description: "The name of the application"
    value: "cheese-min"
  - name: IMAGE_NAME
    description: "The name of the container image"
    value: "cheese-java-pipeline"
  - name: REGISTRY_IMAGE_NAME
    description: "The name of the registry container image"
    value: "docker.io/m1k3pjem/cheese-java-pipeline"
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
        build: ${APPLICATION_NAME}
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"  
    spec:
      lookupPolicy:
        local: false
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: ${REGISTRY_IMAGE_NAME}
          generation: 2
          importPolicy:
            importMode: Legacy
          referencePolicy:
            type: Source
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
        build: ${APPLICATION_NAME}
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"  
    spec:   
      source:
        type: Binary
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: ${REGISTRY_IMAGE_NAME}:latest
          pullSecret:
            name: hello-java-secret
        output:
          to:
            kind: DockerImage
            name: ${REGISTRY_IMAGE_NAME}
          pushSecret:
            name: hello-java-secret    
        postCommit: {}
        nodeSelector: null      
        resources: {}          
      triggers:
        - type: GitHub
          github:
            secretReference:
              name: cheese-java-pipeline-secret
        - type: ConfigChange
        - type: ImageChange      
      runPolicy: Serial
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}     
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
    spec:
      replicas: 1
      selector:
        app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}      
        spec:
          containers:
            - name: ${IMAGE_NAME}
              image: ${REGISTRY_IMAGE_NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
              imagePullPolicy: IfNotPresent              
              env:
                - name: FAVOURITE_CHEESE
                  valueFrom:
                    configMapKeyRef:
                      name: ${IMAGE_NAME}-configmap
                      key: thefavourite.cheese
          triggers:
            - type: GitHub
              github:
                secretReference:
                  name: cheese-java-pipeline-secret
            - type: ConfigChange
            - type: ImageChange            
          restartPolicy: Always
          strategy:
            type: RollingUpdate
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
    spec:
      type: ClusterIP
      selector:
        app: ${APPLICATION_NAME}
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 8080
          targetPort: 8080
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"  
    spec:
      path: "/cheese"
      port:
        targetPort: 8080-tcp
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect  
      to:
        kind: Service
        name: ${APPLICATION_NAME}
        weight: 100
